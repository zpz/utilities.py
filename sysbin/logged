#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

USAGE=$(cat <<'EOF'
Usage:
    pipeline [-s] command [args]

By default, all printouts and logging will appear in terminal,
as well as being saved in log files.
If `-s` is specified, then terminal printout is suppressed.

`args` are arguments to be passed on to `command`.

Logging is saved under "${LOGDIR}".
The caller may want to point "${LOGDIR}" to exact locations specific to the task.
EOF
)

if [[ $# < 1 ]]; then
    echo "${USAGE}"
    exit 1
fi

silent="no"
if [[ "$1" == "-s" ]]; then
    silent="yes"
    shift
fi
if [[ $# < 1 ]]; then
    echo "${USAGE}"
    exit 1
fi

cmd="$1"
shift
args="$@"


: "${LOGDIR:?Environment variable \'LOGDIR\' is not set}"
: "${DATADIR:?Environment variable \'DATADIR\' is not set}"

# About logging, please refer to
#  http://coyote.github.io/log-rotation-of-stdout/

function mlog {
    if [[ "${silent}" == yes ]]; then
        multilog s1000000 n30 "${LOGDIR}"
    else
        tee >(multilog s1000000 n30 "${LOGDIR}")
    fi
}



echo | mlog
echo | mlog
echo "========================================" | mlog
date --utc +'%Y-%m-%d %H:%M:%S UTC' | mlog
echo starting task \`${cmd} ${args}\` | mlog
echo "----------------------------------------" | mlog
echo | mlog

if [[ "${cmd}" == python ]]; then
    python -u ${args} 2>&1 | mlog
else
    ${cmd} ${args} 2>&1 | mlog
fi

echo | mlog
echo "----------------------------------------" | mlog
date --utc +'%Y-%m-%d %H:%M:%S UTC' | mlog
echo task \`${cmd} ${args}\` finished | mlog
echo "========================================" | mlog

